plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

repositories {
    mavenCentral()
    // mavenLocal() // 로컬 개발 시 필요하면 유지, CI/CD에서는 필수는 아님

//    // ★★★ Nexus Public Group Repository 추가 ★★★
//    maven {
//        name = "nexus" // 저장소 이름 (원하는 대로 지정)
//        url = uri("http://localhost:8081/repository/maven-public/") // Nexus Public Group Repository URL
//        allowInsecureProtocol = true
//        // 익명 접근을 허용했다면 credentials는 필요 없습니다.
//        // 만약 익명 접근을 비활성화했다면 여기에 credentials를 추가해야 합니다.
//    }
}

group = 'com.welab'
version = '0.0.6'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


ext {
    set('springCloudVersion', "2025.0.0")
    springCloudVersion = "2025.0.0"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

//    로그인 jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.12.5'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j:8.4.0'

//
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    kafka
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'


//    implementation 'com.welab:projectModule:1.0.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false // plain.jar 생성 완전히 비활성화
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

tasks.register('getAppName') {
    doLast {
        println "${rootProject.name}"
    }
}
tasks.register('getAppVersion') {
    doLast {
        println "${project.version}"
    }
}